import subprocess
import time
from datetime import datetime
from os import path
from typing import Callable, Iterable, Optional, TypeVar

def coords(lon, lat):
    t = "%2.4f" % lat
    if (lat>0):
        t += "N"
    else:
        t += "S"

    t += " %2.4f" % lon
    if (lon>0):
        t += "E"
    else:
        t += "W"
    return t

def make_thumbnail(input_path, output_path, width=200):
    subprocess.check_call(["convert" ,"-thumbnail", str(width), input_path, output_path])

T = TypeVar("T")
def first(condition: Callable[[T], bool], items: Iterable[T]) -> Optional[T]:
    '''Return first element for which @condition is True. Otherwise return None'''
    for item in items:
        if condition(item):
            return item
    return None

def get_footer():
    TIMESTAMP_FILE = "timestamp.txt"
    """Returns data regarding the last update: timestamp of the upgrade process and SHA of the last git commit.
       Both pieces of information are coming from the timestamp.txt file (which is generated by update.sh script)"""
    try:
        f = open(TIMESTAMP_FILE, 'r')

        x = {}
        x['commit'] = f.read().strip()
        x['timestamp'] = str(datetime.fromtimestamp(path.getmtime(TIMESTAMP_FILE)))[:19]
        return x
    except OSError:
        # The file was not found or is generally inaccessible. Return nothing.
        return None
